import{_ as t,p as e,q as d,a1 as a}from"./framework-14f7cf1e.js";const i={},r=a('<h1 id="pck" tabindex="-1"><a class="header-anchor" href="#pck" aria-hidden="true">#</a> PCK</h1><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>PCK Type</td><td>(int32)0x4</td><td>indicates PCK Format</td></tr><tr><td><a href="#lookuptable">Look-Up Table</a></td><td>variable</td><td>a list of all possible tags a file can have</td></tr><tr><td><a href="#entries">File Entries</a></td><td>variable</td><td>an index of all files within the PCK, contains size, type, and filename</td></tr><tr><td><a href="#contents">File Contents</a></td><td>variable</td><td>all files within the PCK, includes file tags</td></tr></tbody></table><p>It is worth noting that aside from the main lineup(PS3, WiiU, and Xbox360) all other consoles are Endian Swapped.</p><h2 id="lookuptable" tabindex="-1"><a class="header-anchor" href="#lookuptable" aria-hidden="true">#</a> lookupTable</h2><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Count</td><td>(int32)0x4</td><td>Amount of tags in the table</td></tr></tbody></table><p>(repeated per count)</p><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Index</td><td>(int32)0x4</td><td>numerical position within the table.</td></tr><tr><td>Value</td><td>variable</td><td>a string(int16 indicates length, then Little endian Unicode string of specified length) indicating tag name</td></tr></tbody></table><h2 id="entries" tabindex="-1"><a class="header-anchor" href="#entries" aria-hidden="true">#</a> Entries</h2><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Count</td><td>(int32)0x4</td><td>Amount of entries in the index</td></tr></tbody></table><p>(repeated per count)</p><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>File Size</td><td>(int32)0x4</td><td>indicates size in bytes of a file</td></tr><tr><td><a href="#file-types">File type</a></td><td>(int32)0x4</td><td>indicates type of file(Skin file, cape file, models, colours, etc)</td></tr><tr><td>File Name</td><td>variable</td><td>a string(int16 indicates length, then Little endian Unicode string of specified length) indicating file name</td></tr></tbody></table><h2 id="contents" tabindex="-1"><a class="header-anchor" href="#contents" aria-hidden="true">#</a> Contents</h2><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Count</td><td>(int32)0x4</td><td>Amount of entries in the tag index</td></tr><tr><td>Tags</td><td>variable</td><td>the tags and values of the file</td></tr><tr><td>Data</td><td>variable</td><td>byte data of a file, size is the same as the applicable File Size value in Entries</td></tr></tbody></table><p>(repeated per count)</p><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>tag key</td><td>(int32)0x4</td><td>indicates key by index</td></tr><tr><td>File Name</td><td>variable</td><td>a string(int16 indicates length, then Little endian Unicode string of specified length) indicating value of tag</td></tr></tbody></table><h2 id="file-types" tabindex="-1"><a class="header-anchor" href="#file-types" aria-hidden="true">#</a> File Types</h2><table><thead><tr><th>ID</th><th>File Type</th><th>Extension</th></tr></thead><tbody><tr><td>0</td><td>Skin</td><td>dlcskin********.png(*any unigue 8 digit ID)</td></tr><tr><td>1</td><td>Cape</td><td>dlccape********.png(*any unique 8 digit ID)</td></tr><tr><td>2</td><td>Texture</td><td>*.png</td></tr><tr><td>3</td><td>UI Data</td><td>*.fui</td></tr><tr><td>4</td><td>Info</td><td>&#39;0&#39;</td></tr><tr><td>5</td><td>Texture Pack Info</td><td>(x16/x32/x64)Info.pck</td></tr><tr><td>6</td><td>Localisation</td><td>(languages/Localisation).loc</td></tr><tr><td>7</td><td>Game Rules</td><td>GameRules.grf</td></tr><tr><td>8</td><td>Audio</td><td>audio.pck</td></tr><tr><td>9</td><td>Color Table</td><td>colors.col</td></tr><tr><td>10</td><td>Game Rules Header</td><td>GameRules.grh</td></tr><tr><td>11</td><td>Skin Data</td><td>Skins.pck</td></tr><tr><td>12</td><td>Models</td><td>models.bin</td></tr><tr><td>13</td><td>Behaviours</td><td>behaviours.bin</td></tr><tr><td>14</td><td>Material</td><td>entityMaterials.bin</td></tr></tbody></table>',17),n=[r];function h(l,o){return e(),d("div",null,n)}const c=t(i,[["render",h],["__file","index.html.vue"]]);export{c as default};
