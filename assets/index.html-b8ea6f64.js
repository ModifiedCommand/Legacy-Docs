import{_ as n,M as a,p as r,q as o,R as t,t as d,N as h,a1 as e}from"./framework-14f7cf1e.js";const s={},l=e('<h1 id="models" tabindex="-1"><a class="header-anchor" href="#models" aria-hidden="true">#</a> Models</h1><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>version</td><td>(int32)0x4</td><td>indicates format version</td></tr><tr><td>Model Count</td><td>(int32)0x4</td><td>how many models are within the file</td></tr><tr><td><a href="#model">Models</a></td><td>variable</td><td>all models within the model file</td></tr></tbody></table>',2),c={href:"https://github.com/MattN-L",target:"_blank",rel:"noopener noreferrer"},f=e('<h2 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h2><p>(repeated per model count)</p><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Model Name</td><td>variable</td><td>a string(int16 indicates length, then utf8 string of specified length) indicating model name</td></tr><tr><td>Texture dimensions</td><td>(2x int32)0x8</td><td>indicates dimensions of texture file, in X Y format</td></tr><tr><td>Part Count</td><td>(int32)0x4</td><td>how many parts are within the model</td></tr><tr><td><a href="#part">Parts</a></td><td>variable</td><td>all parts within the model</td></tr></tbody></table><h2 id="part" tabindex="-1"><a class="header-anchor" href="#part" aria-hidden="true">#</a> Part</h2><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Part Name</td><td>variable</td><td>a string(int16 indicates length, then utf8 string of specified length) indicating part name</td></tr><tr><td>Parent Name</td><td>variable</td><td>a string(int16 indicates length, then utf8 string of specified length) indicating part parent name(only if Format version &gt; 1)</td></tr><tr><td>Translation X</td><td>(float)0x4</td><td>indicates part translation in the X dimension</td></tr><tr><td>Translation Y</td><td>(float)0x4</td><td>indicates part translation in the Y dimension</td></tr><tr><td>Translation Z</td><td>(float)0x4</td><td>indicates part translation in the Z dimension</td></tr><tr><td>Unknown</td><td>(float)0x4</td><td>it is unclear what this space is used to signify</td></tr><tr><td>Texture Offset X</td><td>(float)0x4</td><td>indicates offset in the texture, in the X dimension</td></tr><tr><td>Texture Offset Y</td><td>(float)0x4</td><td>indicates offset in the texture, in the Y dimension</td></tr><tr><td>Rotation X</td><td>(float)0x4</td><td>indicates part rotation in the X dimension</td></tr><tr><td>Rotation Y</td><td>(float)0x4</td><td>indicates part rotation in the Y dimension</td></tr><tr><td>Rotation Z</td><td>(float)0x4</td><td>indicates part rotation in the Z dimension</td></tr><tr><td>Box Count</td><td>(int32)0x4</td><td>how many boxes are within the part</td></tr><tr><td><a href="#box">Boxes</a></td><td>variable</td><td>all boxes within the part</td></tr></tbody></table><h2 id="box" tabindex="-1"><a class="header-anchor" href="#box" aria-hidden="true">#</a> Box</h2><table><thead><tr><th>Name</th><th>Size (per element)</th><th>Description</th></tr></thead><tbody><tr><td>Position X</td><td>(float)0x4</td><td>indicates box position in the X dimension</td></tr><tr><td>Position Y</td><td>(float)0x4</td><td>indicates box position in the Y dimension</td></tr><tr><td>Position Z</td><td>(float)0x4</td><td>indicates box position in the Z dimension</td></tr><tr><td>Length</td><td>(int32)0x4</td><td>length of the box</td></tr><tr><td>Height</td><td>(int32)0x4</td><td>height of the box</td></tr><tr><td>Width</td><td>(int32)0x4</td><td>width of the box</td></tr><tr><td>Uv X</td><td>(float)0x4</td><td>indicates Uv of the box on the texture in the X dimension</td></tr><tr><td>Uv Y</td><td>(float)0x4</td><td>indicates Uv of the box on the texture in the Y dimension</td></tr><tr><td>Scale(inflation)</td><td>(float)0x4</td><td>indicates scale of the box</td></tr><tr><td>Mirror Texture</td><td>(bool)0x1</td><td>indicates whether or not to mirror the texture on the box</td></tr></tbody></table>',7);function x(m,p){const i=a("ExternalLinkIcon");return r(),o("div",null,[l,t("ul",null,[t("li",null,[d("all known Model/Material information is the direct product of "),t("a",c,[d("May/MattNL"),h(i)]),d("'s work!")])]),f])}const u=n(s,[["render",x],["__file","index.html.vue"]]);export{u as default};
